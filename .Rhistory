mutate(stressed = factor(stressed, levels = c("stressed", "unstressed")))%>%
ggplot(aes(stressed,euclid)) +
geom_jitter(color = "orange", alpha = 0.5) +
facet_wrap("song") +
labs(x = "word stress", y = "vowel dispersion") +
theme_classic()
ggplot(space_data, aes(ictus,euclid)) +
geom_jitter(color = "violet", alpha = 0.5) +
facet_wrap("performer") +
labs(x = "beat position", y = "vowel dispersion") +
theme_minimal()
space_data %>%
arrange(euclid) %>%
mutate(stressed = factor(stressed, levels = c("stressed", "unstressed")))%>%
ggplot(aes(stressed,euclid)) +
geom_jitter(color = "orange", alpha = 0.5) +
facet_wrap("performer") +
labs(x = "word stress", y = "vowel dispersion") +
theme_minimal()
space_data %>%
arrange(euclid) %>%
mutate(stressed = factor(stressed, levels = c("stressed", "unstressed")))%>%
ggplot(aes(x=ictus ,y=euclid,fill = stressed)) +
geom_boxplot(alpha = 0.5)  +
#geom_jitter( alpha = 0.5) +
theme_classic() +
facet_wrap("quantity")
labs( xlab = "beat" ,ylab = "euclidean distance")
ggsave('space_strictus.png')
ggplot(quant_data,aes(quantity, duration)) +
geom_violin()+
geom_jitter(aes(shape = performer, color = quantity), alpha = 0.5) +
labs(x = "syllable quantity", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("q_dur.png")
ggplot(quant_data,aes(quantity, duration)) +
geom_violin()+
geom_boxplot() +
geom_jitter(aes(shape = performer, color = quantity), alpha = 0.5) +
labs(x = "syllable quantity", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("q_dur.png")
ggplot(quant_data,aes(quantity, duration)) +
geom_violin()+
geom_boxplot(alpha = 0.5) +
geom_jitter(aes(shape = performer, color = quantity), alpha = 0.5) +
labs(x = "syllable quantity", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("q_dur.png")
ggplot(quant_data,aes(quantity, duration)) +
geom_violin()+
geom_boxplot(alpha = 0.3) +
geom_jitter(aes(shape = performer, color = quantity), alpha = 0.5) +
labs(x = "syllable quantity", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("q_dur.png")
ggplot(quant_data,aes(quantity, duration)) +
geom_violin()+
geom_boxplot(alpha = 0.3, notch = TRUE) +
geom_jitter(aes(shape = performer, color = quantity), alpha = 0.5) +
labs(x = "syllable quantity", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("q_dur.png")
ggplot(quant_data,aes(quantity, duration, shape = performer, color = quantity)) +
geom_violin()+
geom_boxplot(alpha = 0.3, notch = TRUE) +
geom_jitter( alpha = 0.5) +
labs(x = "syllable quantity", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("q_dur.png")
ggplot(quant_data,aes(quantity, duration, color = quantity)) +
geom_violin()+
geom_boxplot(alpha = 0.3, notch = TRUE) +
geom_jitter( aes(shape=performer), alpha = 0.5) +
labs(x = "syllable quantity", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("q_dur.png")
ggplot(quant_data,aes(quantity, duration, color = quantity)) +
geom_violin()+
#geom_boxplot(alpha = 0.3, notch = TRUE) +
geom_jitter( aes(shape=performer), alpha = 0.5) +
labs(x = "syllable quantity", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("q_dur.png")
ggplot(quant_data,aes(quantity, duration, color = quantity)) +
#geom_violin()+
geom_boxplot(alpha = 0.3, notch = TRUE) +
geom_jitter( aes(shape=performer), alpha = 0.5) +
labs(x = "syllable quantity", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("q_dur.png")
ggplot(quant_data,aes(quantity, duration, color = quantity)) +
geom_violin()+
geom_boxplot(alpha = 0.3, notch = TRUE) +
geom_jitter( aes(shape=performer), alpha = 0.5) +
labs(x = "syllable quantity", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("q_dur.png")
ggplot(quant_data,aes(quantity, duration, color = quantity)) +
geom_violin()+
geom_boxplot(alpha = 0.3, notch = TRUE) +
geom_jitter(alpha = 0.5) +
labs(x = "syllable quantity", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("q_dur.png")
ggplot(quant_data,aes(quantity, duration, color = quantity)) +
#geom_violin()+
geom_boxplot(alpha = 0.3, notch = TRUE) +
geom_jitter(alpha = 0.5) +
labs(x = "syllable quantity", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("q_dur.png")
ggplot(quant_data,aes(quantity, duration, color = quantity)) +
#geom_violin()+
geom_boxplot(alpha = 0.3, notch = TRUE) +
geom_jitter(alpha = 0.5) +
labs(x = "syllable quantity", y = "mean vowel duration (ms)") +
facet_wrap("ictus")
theme_minimal()
ggsave("q_dur.png")
ggplot(quant_data,aes(quantity, duration, color = quantity)) +
#geom_violin()+
geom_boxplot(alpha = 0.3) +
geom_jitter(alpha = 0.5) +
labs(x = "syllable quantity", y = "mean vowel duration (ms)") +
facet_wrap("ictus")
theme_minimal()
ggsave("q_dur.png")
ggplot(quant_data,aes(quantity, duration, color = quantity)) +
geom_violin()+
#geom_boxplot(alpha = 0.3) +
geom_jitter(alpha = 0.5) +
labs(x = "syllable quantity", y = "mean vowel duration (ms)") +
facet_wrap("ictus")
theme_minimal()
ggsave("q_dur.png")
ggplot(quant_data,aes(quantity, duration, color = quantity)) +
#geom_violin()+
geom_boxplot(alpha = 0.3) +
geom_jitter(alpha = 0.5) +
labs(x = "syllable quantity", y = "mean vowel duration (ms)") +
facet_wrap("ictus")
theme_minimal()
ggsave("q_dur.png")
ggplot(quant_data,aes(quantity, duration, color = quantity)) +
#geom_violin()+
geom_boxplot(alpha = 0.3) +
#geom_jitter(alpha = 0.5) +
labs(x = "syllable quantity", y = "mean vowel duration (ms)") +
facet_wrap("ictus")
theme_minimal()
ggsave("q_dur.png")
ggplot(strictus_data,aes(ictus,duration, shape = ictus)) +
geom_jitter(color = "violet", alpha = 0.5) +
facet_wrap("song") +
labs(x = "beat position", y = "mean vowel duration (ms)") +
theme_minimal()
library("lme4")
library("ggplot2")
library("broom")
library("dplyr")
data_df <- read.csv("vowel_master.csv", header= TRUE)
data_df$ictus <- as.factor(data_df$ictus)
data_df$stressed <- as.factor(data_df$stressed)
data_df$stressed <- recode_factor(data_df$stressed, "0" = "unstressed","1" = "stressed")
data_df$quantity <- as.factor(data_df$quantity)
data_df$shape <- as.factor(data_df$shape)
data_df$song <- as.factor(data_df$song)
data_df$word <- as.factor(data_df$word)
#head(data_df)
#to look at vowel duration in song-level and word-level prominence positions, I filter out only syllables of Q1 and Q2, and only those shapes which surface in both stressed and unstressed positions
strictus_data <- filter(data_df, data_df$quantity!="3"& data_df$shape != "C")
#strictus_data <- filter(strictus_data, nchar(strictus_data$segment)==1)
strictus_data
ggplot(strictus_data,aes(ictus,duration, shape = ictus)) +
geom_jitter(color = "violet", alpha = 0.5) +
facet_wrap("song") +
labs(x = "beat position", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("song_icK_dur.png")
strictus_data %>%
arrange(duration) %>%
mutate(stressed = factor(stressed, levels = c("stressed", "unstressed")))%>%
ggplot(aes(stressed,duration, shape = stressed)) +
geom_jitter(color = "orange", alpha = 0.5) +
facet_wrap("song") +
labs(x = "word stress", y = "within-song mean vowel duration (ms)") +
theme_minimal()
ggsave("song_str_dur.png")
ggplot(strictus_data,aes(ictus,duration, shape = ictus)) +
geom_jitter(color = "violet", alpha = 0.5) +
facet_wrap("performer") +
labs(x = "beat position", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("perf_ick_dur.png")
strictus_data %>%
arrange(duration) %>%
mutate(stressed = factor(stressed, levels = c("stressed", "unstressed")))%>%
ggplot(strictus_data,aes(stressed,duration, shape = stressed)) +
geom_jitter(color = "orange", alpha = 0.5) +
facet_wrap("performer") +
labs(x = "word stress", y = "within-subject mean vowel duration (ms)") +
theme_minimal()
ggplot(strictus_data,aes(ictus,duration, shape = ictus)) +
geom_jitter(color = "violet", alpha = 0.5) +
facet_wrap("song") +
labs(x = "beat position", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("song_icK_dur.png")
strictus_data %>%
arrange(duration) %>%
mutate(stressed = factor(stressed, levels = c("stressed", "unstressed")))%>%
ggplot(aes(stressed,duration, shape = stressed)) +
geom_jitter(color = "orange", alpha = 0.5) +
facet_wrap("song") +
labs(x = "word stress", y = "within-song mean vowel duration (ms)") +
theme_minimal()
ggsave("song_str_dur.png")
ggplot(strictus_data,aes(ictus,duration, shape = ictus)) +
geom_jitter(color = "violet", alpha = 0.5) +
facet_wrap("performer") +
labs(x = "beat position", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("perf_ick_dur.png")
strictus_data %>%
arrange(duration) %>%
mutate(stressed = factor(stressed, levels = c("stressed", "unstressed")))%>%
ggplot(aes(stressed,duration, shape = stressed)) +
geom_jitter(color = "orange", alpha = 0.5) +
facet_wrap("performer") +
labs(x = "word stress", y = "within-subject mean vowel duration (ms)") +
theme_minimal()
ggsave("perf_str_dur.png")
library("lme4")
library("ggplot2")
library("broom")
library("dplyr")
spata_df <- read.csv("vowel_master.csv", header= TRUE)
spata_df$ictus <- as.factor(spata_df$ictus)
spata_df$stressed <- as.factor(spata_df$stressed)
spata_df$stressed <- recode_factor(spata_df$stressed, "0" = "unstressed","1" = "stressed")
spata_df$quantity <- as.factor(spata_df$quantity)
spata_df$song <- as.factor(spata_df$song)
spata_df$shape <- as.factor(spata_df$shape)
spata_df$word <- as.factor(spata_df$word)
spata_df
#filter out all vowel phonemes that don't occur in both stressed and unstressed positions in Estonian
space_data <- filter(spata_df, spata_df$quantity != "3" & (spata_df$segment == "a" |spata_df$segment == "aa"|spata_df$segment == "aː"| spata_df$segment == "e" |spata_df$segment == "ee"| spata_df$segment == "eː"  | spata_df$segment == "i" | spata_df$segment == "ii"| spata_df$segment == "iː" | spata_df$segment == "o"| spata_df$segment == "oo"| spata_df$segment == "oː") )
#spata_df$quantity!="3" & spata_df$segment != "ø"
#&spata_df$segment != "øː"& spata_df$segment !=  "ɵ"&spata_df$segment !=  "ɵɵ"
#& spata_df$segment != "ɵː" &spata_df$segment != "æ"&spata_df$segment != "æː"
#& spata_df$segment != "ææ" & spata_df$segment != "y")
(space_data)
ggplot(space_data, aes(ictus,euclid)) +
geom_jitter(color = "violet", alpha = 0.5) +
facet_wrap("song") +
labs(x = "beat position", y = "vowel dispersion") +
theme_classic()
ggsave("song_euc_ictus.png")
space_data %>%
arrange(euclid) %>%
mutate(stressed = factor(stressed, levels = c("stressed", "unstressed")))%>%
ggplot(aes(stressed,euclid)) +
geom_jitter(color = "orange", alpha = 0.5) +
facet_wrap("song") +
labs(x = "word stress", y = "vowel dispersion") +
theme_classic()
ggsave("song_euc_stress.png")
ggplot(space_data, aes(ictus,euclid)) +
geom_jitter(color = "violet", alpha = 0.5) +
facet_wrap("performer") +
labs(x = "beat position", y = "vowel dispersion") +
theme_minimal()
ggsave("perf_euc_ictus.png")
space_data %>%
arrange(euclid) %>%
mutate(stressed = factor(stressed, levels = c("stressed", "unstressed")))%>%
ggplot(aes(stressed,euclid)) +
geom_jitter(color = "orange", alpha = 0.5) +
facet_wrap("performer") +
labs(x = "word stress", y = "vowel dispersion") +
theme_minimal()
ggsave("perf_euc_stress.png")
space_data %>%
arrange(euclid) %>%
mutate(stressed = factor(stressed, levels = c("stressed", "unstressed")))%>%
ggplot(aes(x=ictus ,y=euclid,fill = stressed)) +
geom_boxplot(alpha = 0.5)  +
#geom_jitter( alpha = 0.5) +
theme_classic() +
facet_wrap("quantity")
labs( xlab = "beat" ,ylab = "euclidean distance")
ggsave('space_strictus.png')
desmd <- lmer(euclid ~ stressed + ictus + stressed*ictus + (1|segment) + (1|song) + (1|performer), REML = FALSE, data = space_data )
summary(desmd)
des_null_md <- lmer(euclid ~  (1|segment) + (1|song) +(1|performer), REML = FALSE, data = space_data )
summary(des_null_md)
anova(desmd,des_null_md)
library("sjPlot")
#library("sjPlot")
library("lme4")
library("ggplot2")
library("broom")
library("dplyr")
data_df <- read.csv("vowel_master.csv", header= TRUE)
data_df$ictus <- as.factor(data_df$ictus)
data_df$stressed <- as.factor(data_df$stressed)
data_df$stressed <- recode_factor(data_df$stressed, "0" = "unstressed","1" = "stressed")
data_df$quantity <- as.factor(data_df$quantity)
data_df$shape <- as.factor(data_df$shape)
data_df$song <- as.factor(data_df$song)
data_df$word <- as.factor(data_df$word)
#head(data_df)
#to look at vowel duration in song-level and word-level prominence positions, I filter out only syllables of Q1 and Q2, and only those shapes which surface in both stressed and unstressed positions
strictus_data <- filter(data_df, data_df$quantity!="3"& data_df$shape != "C")
#strictus_data <- filter(strictus_data, nchar(strictus_data$segment)==1)
strictus_data
ggplot(strictus_data,aes(ictus,duration, shape = ictus)) +
geom_jitter(color = "violet", alpha = 0.5) +
facet_wrap("song") +
labs(x = "beat position", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("song_icK_dur.png")
strictus_data %>%
arrange(duration) %>%
mutate(stressed = factor(stressed, levels = c("stressed", "unstressed")))%>%
ggplot(aes(stressed,duration, shape = stressed)) +
geom_jitter(color = "orange", alpha = 0.5) +
facet_wrap("song") +
labs(x = "word stress", y = "within-song mean vowel duration (ms)") +
theme_minimal()
ggsave("song_str_dur.png")
ggplot(strictus_data,aes(ictus,duration, shape = ictus)) +
geom_jitter(color = "violet", alpha = 0.5) +
facet_wrap("performer") +
labs(x = "beat position", y = "mean vowel duration (ms)") +
theme_minimal()
ggsave("perf_ick_dur.png")
strictus_data %>%
arrange(duration) %>%
mutate(stressed = factor(stressed, levels = c("stressed", "unstressed")))%>%
ggplot(aes(stressed,duration, shape = stressed)) +
geom_jitter(color = "orange", alpha = 0.5) +
facet_wrap("performer") +
labs(x = "word stress", y = "within-subject mean vowel duration (ms)") +
theme_minimal()
ggsave("perf_str_dur.png")
interaction.plot(strictus_data$stressed,strictus_data$ictus,strictus_data$duration,xlab="stressed",ylab="mean vowel duration(ms)",trace.label = "beat")
strictus_data %>%
arrange(duration)%>%
mutate(stressed = factor(stressed, levels = c("stressed", "unstressed")))%>%
ggplot(aes(x=stressed ,y=duration,fill = ictus)) +
geom_violin() + stat_ydensity() + theme_minimal() +
labs( xlab = "word stress" ,ylab = "vowel duration (ms)") +
facet_wrap("quantity", labeller = label_both)
ggsave("dur_density_qfac.png")
shape_df <- filter(strictus_data, strictus_data$shape != "VVC" & strictus_data$shape != "VVCC" & strictus_data$shape != "VV" & strictus_data$shape != "V")
ggplot(shape_df,aes(x=shape,y=duration, fill = ictus)) +
geom_violin() + stat_ydensity() + theme_minimal() +
labs( xlab = "syllable shape" ,ylab = "vowel duration (ms)")
ggsave("dur_shape_ictus.png")
shape_df %>%
arrange(duration)%>%
mutate(stressed = factor(stressed, levels = c("stressed", "unstressed")))%>%
ggplot(aes(x=shape,y=duration, fill = stressed)) +
geom_violin() + stat_ydensity() + theme_minimal() +
labs( xlab = "syllable shape" ,ylab = "vowel duration (ms)")
ggsave("dur_shapestress.png")
lindesignmod <- lmer(duration ~ ictus + stressed + quantity + ictus*stressed + quantity*ictus + (1|word) + (1|song) + (1|performer), data = strictus_data, REML = FALSE)
summary(lindesignmod)
plot_model(lindesignmod)
mod_df <- data.frame(linpredict = predict(lindesignmod, strictus_data), ick = strictus_data$ictus)
mod_df <- data.frame(linpredict = predict(lindesignmod, strictus_data), ick =strictus_data$ictus)
ggplot(data = strictus_data, aes(x =duration, y = ick)) +
geom_point(color='blue') +
geom_line(color='red',data = mod_df, aes(x=linpredict, y=ick))
mod_df <- data.frame(linpredict = predict(lindesignmod, strictus_data),ick=strictus_data$ictus)
ggplot(data = strictus_data, aes(x =duration, y = ick)) +
geom_point(color='blue') +
geom_line(color='red',data = mod_df, aes(x=linpredict, y=ick))
mod_df <- data.frame(linpredict = predict(lindesignmod, strictus_data),ictus=strictus_data$ictus)
ggplot(data = strictus_data, aes(x =duration, y = ick)) +
geom_point(color='blue') +
geom_line(color='red',data = mod_df, aes(x=linpredict, y=ictus))
mod_df <- data.frame(linpredict = predict(lindesignmod, strictus_data),ictus=strictus_data$ictus)
ggplot(data = strictus_data, aes(x =duration, y = ictus)) +
geom_point(color='blue') +
geom_line(color='red',data = mod_df, aes(x=linpredict, y=ictus))
mod_df <- data.frame(linpredict = predict(lindesignmod, strictus_data),ictus=strictus_data$ictus)
ggplot(data = strictus_data, aes(x =duration, y = ictus)) +
geom_point(color='blue') +
geom_line(color='red',data = mod_df, aes(x=linpredict, y=ictus))
ggplot(data = strictus_data, aes(x =ictus, y = duration)) +
geom_point +
geom_line(data = fortify(lindesignmod), aes(x=ictus,y=.fitted,))
ggplot(data = strictus_data, aes(x =ictus, y = duration)) +
geom_point() +
geom_line(data = fortify(lindesignmod), aes(x=ictus,y=.fitted,))
predict_df <- data.frame(dur_pred = predict(lindesignmod,strictus_data))
ggplot(data = strictus_data, aes(x =ictus, y = duration)) +
geom_point() +
geom_line(data = fortify(predict_df), aes(x=ictus,y=.fitted,))
predict_df <- data.frame(dur_pred = predict(lindesignmod,strictus_data), ictus = strictus_data$ictus)
ggplot(data = strictus_data, aes(x =ictus, y = duration)) +
geom_point() +
geom_line(data = fortify(predict_df), aes(x=ictus,y=.fitted,))
ggplot(data = strictus_data, aes(x =ictus, y = duration)) +
geom_point() +
geom_line(data = lindesignmod, aes(x=ictus,y=.fitted,))
install.packages("sjPlot")
tab_model(lindesignmod,nullmod)
library("sjPlot")
library("lme4")
library("ggplot2")
library("broom")
library("dplyr")
data_df <- read.csv("vowel_master.csv", header= TRUE)
data_df$ictus <- as.factor(data_df$ictus)
data_df$stressed <- as.factor(data_df$stressed)
data_df$stressed <- recode_factor(data_df$stressed, "0" = "unstressed","1" = "stressed")
data_df$quantity <- as.factor(data_df$quantity)
data_df$shape <- as.factor(data_df$shape)
data_df$song <- as.factor(data_df$song)
data_df$word <- as.factor(data_df$word)
#head(data_df)
#to look at vowel duration in song-level and word-level prominence positions, I filter out only syllables of Q1 and Q2, and only those shapes which surface in both stressed and unstressed positions
strictus_data <- filter(data_df, data_df$quantity!="3"& data_df$shape != "C")
#strictus_data <- filter(strictus_data, nchar(strictus_data$segment)==1)
strictus_data
lindesignmod <- lmer(duration ~ ictus + stressed + quantity + ictus*stressed + quantity*ictus + (1|word) + (1|song) + (1|performer), data = strictus_data, REML = FALSE)
summary(lindesignmod)
tab_model(lindesignmod,nullmod)
tab_model(lindesignmod)
tab_model(lindesignmod,linnullIntmod)
linnullIntmod <- lmer(duration ~  (1|word) + (1|song) + (1|performer), data = strictus_data, REML = FALSE)
n1 <- summary(linnullIntmod)
print(n1)
tab_model(lindesignmod,linnullIntmod)
tab_model(comp2)
table(comp2)
table(comp2, digits = 3)
table(comp2)
print(comp2)
comp2 <- anova(lindesignmod,linnullIntmod)
print(comp2)
tab_model(lindesignmod)
tab_model(linnullIntmod)
tab_model(lindesignmod,linnullIntmod)
tab_model(lindesignmod, digits = 3)
tab_model(lindesignmod, digits = 4)
tab_model(lindesignmod, digits = 3)
tab_model(lindesignmod, digits.re = 5)
tab_model(lindesignmod, digits.re = 4)
tab_model(linnullIntmod, digits.re = 4)
tab_model(lindesignmod,linnullIntmod, digits.re = 4)
sjp.aov1(comp2)
plot_residuals(lindesignmod)
plot_model(lindesignmod)
plot_models(lindesignmod)
plot_models(lindesignmod,desmd)
tab_model(lindesignmod, digits.re = 4)
tab_model(linnullIntmod, digits.re = 4)
tab_model(lindesignmod,linnullIntmod, digits.re = 4)
library("sjPlot")
library("lme4")
library("ggplot2")
library("broom")
library("dplyr")
spata_df <- read.csv("vowel_master.csv", header= TRUE)
spata_df$ictus <- as.factor(spata_df$ictus)
spata_df$stressed <- as.factor(spata_df$stressed)
spata_df$stressed <- recode_factor(spata_df$stressed, "0" = "unstressed","1" = "stressed")
spata_df$quantity <- as.factor(spata_df$quantity)
spata_df$song <- as.factor(spata_df$song)
spata_df$shape <- as.factor(spata_df$shape)
spata_df$word <- as.factor(spata_df$word)
spata_df
tab_model(desmd)
tab_model(des_null_md)
anova(desmd,des_null_md)
spc_comp <- anova(desmd,des_null_md)
print(spc_comp)
desmd <- lmer(euclid ~ stressed + ictus + stressed*ictus + (1|segment) + (1| word) + (1|song) + (1|performer), REML = FALSE, data = space_data )
summary(desmd)
tab_model(desmd)
tab_model(desmd,digits.re = 3)
tab_model(desmd,digits.re = 4)
desmd <- lmer(euclid ~ stressed + ictus + stressed*ictus + (1|segment) + (1|song) + (1|performer), REML = FALSE, data = space_data )
summary(desmd)
tab_model(desmd)
tab_model(des_null_md)
spc_comp <- anova(desmd,des_null_md)
print(spc_comp)
tab_model(desmd)
library("sjPlot")
library("lme4")
library("ggplot2")
library("broom")
library("dplyr")
quant_df <- read.csv("vowel_master.csv", header= TRUE)
quant_df$ictus <- as.factor(quant_df$ictus)
quant_df$stressed <- as.factor(quant_df$stressed)
quant_df$stressed <- recode_factor(quant_df$stressed, "0" = "unstressed","1" = "stressed")
quant_df$quantity <- as.factor(quant_df$quantity)
quant_df$song <- as.factor(quant_df$song)
quant_df$word <- as.factor(quant_df$word)
head(quant_df)
tab_model(maxmdl)
tab_model(maxmdl, digits.re = 4)
tab_model(nullmdl)
tab_model(nullmdl, digits.re = 4)
tab_model(maxmdl, digits.re = 4)
