{"frames":[{"func":"with(euclid_df, vowelMeansPolygonArea(f1, f2, qual_id, poly.order = c(\"i\", \n    \"ɪ\", \"e\", \"ø\", \"ɛ\", \"æ\", \"y\", \"ɵ\", \"u\", \"ʊ\", \"o\", \"a\"), \n    group = performer))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"with.default(euclid_df, vowelMeansPolygonArea(f1, f2, qual_id, \n    poly.order = c(\"i\", \"ɪ\", \"e\", \"ø\", \"ɛ\", \"æ\", \"y\", \"ɵ\", \n        \"u\", \"ʊ\", \"o\", \"a\"), group = performer))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(substitute(expr), data, enclos = parent.frame())","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(substitute(expr), data, enclos = parent.frame())","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vowelMeansPolygonArea(f1, f2, qual_id, poly.order = c(\"i\", \"ɪ\", \n    \"e\", \"ø\", \"ɛ\", \"æ\", \"y\", \"ɵ\", \"u\", \"ʊ\", \"o\", \"a\"), group = performer)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"by(df, df$g, function(i) splancs::areapl(cbind(tapply(i$f2, i$v, \n    mean), tapply(i$f1, i$v, mean))))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"by.data.frame(df, df$g, function(i) splancs::areapl(cbind(tapply(i$f2, \n    i$v, mean), tapply(i$f1, i$v, mean))))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"structure(eval(substitute(tapply(seq_len(nd), IND, FUNx, simplify = simplify)), \n    data), call = match.call(), class = \"by\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(substitute(tapply(seq_len(nd), IND, FUNx, simplify = simplify)), \n    data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(substitute(tapply(seq_len(nd), IND, FUNx, simplify = simplify)), \n    data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tapply(seq_len(528L), list(`df$g` = c(\"LK\", \"LK\", \"LK\", \"LK\", \n\"LK\", \"LK\", \"LK\", \"LK\", \"LK\", \"LK\", \"LK\", \"MH\", \"MH\", \"MH\", \"MH\", \n\"MH\", \"MH\", \"MH\", \"MH\", \"MH\", \"MH\", \"MH\", \"MH\", \"MH\", \"MH\", \"MH\", \n\"MH\", \"MH\", \"MH\", \"MH\", \"MH\", \"MH\", \"MH\", \"MH\", \"MH\", \"MH\", \"MH\",  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(X = ans[index], FUN = FUN, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(data[x, , drop = FALSE], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"splancs::areapl(cbind(tapply(i$f2, i$v, mean), tapply(i$f1, i$v, \n    mean)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in splancs::areapl(cbind(tapply(i$f2, i$v, mean), tapply(i$f1, i$v,  : \n  NA/NaN/Inf in foreign function call (arg 1)\n"}